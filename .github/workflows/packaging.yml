name: Packaging
on:
  - push
jobs:
  format:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install tox
        run: python -m pip install tox
      - name: Run black
        run: tox -e format
  lint:
    name: Code Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install tox
        run: python -m pip install tox
      - name: Run flake8
        run: tox -e lint
  typecheck:
    name: Type check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install tox
        run: python -m pip install tox
      - name: Run mypy
        run: python -m tox -e typecheck
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python:
          - version: "3.10"
            toxenv: "py310"
          - version: "3.9"
            toxenv: "py39"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python.version }}
      - name: Install tox
        run: python -m pip install tox
      - name: Run pytest
        run: tox -e ${{ matrix.python.toxenv }}
  build_distro:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install build frontend
        run: python -m pip install build
      - name: Create Source Package
        run: python -m build --sdist
      - uses: actions/upload-artifact@v3
        with:
          path: ./dist/*.tar.gz
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macOS-10.15]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel
      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheels
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheels/*.whl
